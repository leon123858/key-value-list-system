openapi: 3.0.3
info:
  title: key-value-list system
  description: |-
    這是 Dcard 後端實習生的面試作業
  contact:
    email: a0970785699@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0
externalDocs:
  description: Find out more about AID
  url: https://github.com/leon123858/key-value-list-system
servers:
  - url: http://127.0.0.1:3000
tags:
  - name: get
    description: 獲取分頁的方法
  - name: set
    description: 設置與排列分頁的方法
  - name: delete
    description: 定期刪除過期分頁的方法
paths:
  /api/get/head:
    get:
      tags:
        - get
      summary: 依照列表鍵值獲取首頁 id
      description: 放入在創建列表時定義的關鍵字, 可以得到該關鍵字所代表列表的第一頁編號(可視為 cursor)
      operationId: apigethead
      parameters:
        - in: query
          name: key
          schema:
            type: string
          example: 'meme'
          description: create head 時選定的列表關鍵字
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  nextPageKey:
                    type: string
                    description: 目標頁 id (cursor)
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        '404':
          description: key not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/get/page:
    get:
      tags:
        - get
      summary: 依照分頁 id (cursor) 獲取分頁資訊和下一頁的 id
      description: 如果下一頁 id 未定義表示列表結束
      operationId: apigetpage
      parameters:
        - in: query
          name: pageId
          schema:
            type: string
          description: pageId 為自動生成的唯一編號(亂碼)
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  nextPageKey:
                    type: string
                    nullable: true
                    description: 目標頁 id (cursor), 沒下一頁則為未定義
                  articles:
                    type: array
                    description: 貼文陣列
                    items:
                      type: string
                      description: 一篇文章的內容
                      example: 我是一個 post
                required:
                  - articles
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        '404':
          description: key not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/create/head:
    post:
      tags:
        - set
      summary: 創建列表的第一頁
      description: 需同時定義列表鍵值, 用來搜索列表, 若鍵值已存在不報錯, 所有獲取鍵值操作將在新舊列表擇一
      operationId: apicreatehead
      requestBody:
        description: 包含鍵值和發文內容陣列
        content:
          application/json:
            schema:
              type: object
              properties:
                listKey:
                  type: string
                  description: 搜索列表用的鍵值
                articles:
                  type: array
                  description: 貼文陣列
                  items:
                    type: string
                    description: 一篇文章的內容
                    example: 我是一個 post
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  pageKey:
                    type: string
                    description: 創建出來的列表第一頁的 id (cursor for first page)
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/create/page:
    post:
      tags:
        - set
      summary: 創建列表的某一頁, 但不與特定列表連結
      description: 需定義該頁要存儲的文章陣列內容作為輸入, 調用者應自行紀錄回傳的分頁 id, 再用 move page 移到想插入的某列表特定分頁後面
      operationId: apicreatepage
      requestBody:
        description: 包含發文內容陣列
        content:
          application/json:
            schema:
              type: object
              properties:
                articles:
                  type: array
                  description: 貼文陣列
                  items:
                    type: string
                    description: 一篇文章的內容
                    example: 我是一個 post
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  pageKey:
                    type: string
                    description: 創建出來的分頁 id (cursor for the page)
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/update/page:
    put:
      tags:
        - set
      summary: 更新特定分頁
      description: 需放入要更新的貼文陣列以及目標分頁的 id
      operationId: apiupdatepage
      requestBody:
        description: 包含發文內容陣列
        content:
          application/json:
            schema:
              type: object
              properties:
                pageKey:
                  type: string
                  description: 目標分頁的 id
                articles:
                  type: array
                  description: 貼文陣列
                  items:
                    type: string
                    description: 一篇文章的內容
                    example: 我是一個 post
      responses:
        '200':
          description: update complete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/move/page:
    put:
      tags:
        - set
      summary: 移動分頁到指定分頁後面, 可視為把 source page 連接到 target page 後面
      description: 基於效率不檢測環狀 link-list 的錯誤, 調用時須確認操作 link-list 的搜索關鍵字, 若關鍵字錯誤或是有任一分頁不存在會自動回朔結果, 避免未定義行為, 且不報錯
      operationId: apimovepage
      requestBody:
        description: 包含要移動的分頁, 目標分頁, 以及目標分頁所在 link-list 的搜索關鍵字
        content:
          application/json:
            schema:
              type: object
              properties:
                listKey:
                  type: string
                  description: 要移動分頁的 id
                sourceKey:
                  type: string
                  description: 目標分頁的 id
                targetKey:
                  type: string
                  description: 目標分頁所在 link-list 的搜索關鍵字
      responses:
        '200':
          description: move complete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/delete/head:
    delete:
      tags:
        - delete
      summary: 刪除特定列表
      description: 需放入列表的搜索關鍵字, 假設調用端有自行紀錄各列表需刪除的時間
      operationId: apideletehead
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                listKey:
                  type: string
                  description: 列表的搜索關鍵字
      responses:
        '200':
          description: delete complete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
components:
  schemas:
    ApiResponse:
      type: object
      properties:
        status:
          type: string
    ApiErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: 錯誤原因
